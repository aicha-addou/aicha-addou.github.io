WEBVTT

00:00:10.240 --> 00:00:12.080
大家好，欢迎收看本周的

00:00:12.080 --> 00:00:14.480
YouTube 开发者直播节目。我是 Jeff

00:00:14.480 --> 00:00:16.320
Posnik，来自纽约，

00:00:16.320 --> 00:00:17.800
我是开发者

00:00:17.800 --> 00:00:20.199
关系团队的成员。本周，我非常

00:00:20.199 --> 00:00:21.680
高兴能与大家探讨

00:00:21.680 --> 00:00:24.560
定制 YouTube 嵌入式

00:00:24.560 --> 00:00:26.679
播放器的不同方法。在开始之前，我

00:00:26.679 --> 00:00:29.160
想先制定几个基本规则，以便大致

00:00:29.160 --> 00:00:30.920
了解我们

00:00:30.920 --> 00:00:32.719
今天要讲的内容。

00:00:32.719 --> 00:00:34.040
嵌入式播放器有很多，

00:00:35.559 --> 00:00:37.760
定制方法也有很多种。但在本期

00:00:37.760 --> 00:00:40.200
节目中，我们将重点介绍

00:00:40.200 --> 00:00:43.440
定制 iframe 嵌入式播放器，

00:00:43.440 --> 00:00:45.680
这是我们目前推荐的

00:00:45.680 --> 00:00:48.559
在网页上嵌入视频的方式。

00:00:48.559 --> 00:00:50.320
我们将特别关注与

00:00:53.320 --> 00:00:56.120
桌面 Web 浏览器最相关的选项。

00:00:56.120 --> 00:00:57.840
我们将要讨论的许多定制选项确实会对

00:00:57.840 --> 00:01:00.559
移动

00:01:00.559 --> 00:01:02.800
浏览器播放产生一定影响，但并非所有选项都会产生影响。

00:01:04.119 --> 00:01:06.720
今天，我们将重点介绍这些选项如何影响

00:01:06.720 --> 00:01:08.799
桌面播放。

00:01:08.799 --> 00:01:10.920
今天我们不会讨论的另一件事是

00:01:10.920 --> 00:01:13.799
使用 JavaScript API 来控制

00:01:13.799 --> 00:01:15.720
播放，嗯，这显然是一个非常

00:01:15.720 --> 00:01:17.200
有趣的话题，也是一个非常重要的

00:01:17.200 --> 00:01:18.479
话题，只是有点超出了

00:01:18.479 --> 00:01:20.920
我们想要讨论的范围，所以

00:01:20.920 --> 00:01:22.479
嗯，我们不会介绍任何

00:01:22.479 --> 00:01:24.000
你可以在 JavaScript 中用来

00:01:24.000 --> 00:01:25.799
启动播放或控制

00:01:25.799 --> 00:01:28.960
播放或

00:01:28.960 --> 00:01:31.280
在播放器中播放发生变化时检索接收事件的方法，嗯，

00:01:31.280 --> 00:01:33.560
我们要介绍的是特定页面

00:01:33.560 --> 00:01:36.000
文档中涵盖的内容，

00:01:36.000 --> 00:01:38.079
所以如果我们把它拉

00:01:38.079 --> 00:01:41.560
出来，嗯，我们会与你分享，嗯，

00:01:41.560 --> 00:01:44.479
当我进行这个演示时，

00:01:44.479 --> 00:01:45.880
我将要介绍的很多内容都与

00:01:45.880 --> 00:01:48.439
特定的网页有关，嗯，当我们回去把

00:01:48.439 --> 00:01:50.240
这个视频发布到 YouTube 上时，我会附上

00:01:50.240 --> 00:01:52.040
所有网页的链接注释，

00:01:52.040 --> 00:01:53.680
这样你就可以自己去那里查看，

00:01:55.799 --> 00:01:58.960
所以这是

00:01:58.960 --> 00:02:01.159
我们讨论

00:02:01.159 --> 00:02:03.039
你可以对

00:02:03.039 --> 00:02:06.799
YouTube 嵌入式 iframe 播放器进行的自定义的主要起点，嗯，

00:02:06.799 --> 00:02:09.520
你可以从我们的主要 developers.google.com 获取

00:02:11.680 --> 00:02:13.720
文档，

00:02:16.879 --> 00:02:18.440
文档中这个参数部分的所有内容都是公平的游戏，我们

00:02:18.440 --> 00:02:21.239
现在要讨论的是嗯 在

00:02:21.239 --> 00:02:23.200
我开始

00:02:23.200 --> 00:02:25.440
解释这些参数之前，还有一件事是

00:02:25.440 --> 00:02:26.760
解释将

00:02:26.760 --> 00:02:29.800
iframe

00:02:29.800 --> 00:02:33.360
播放器加载到网页上的两种不同方式，嗯，

00:02:33.360 --> 00:02:35.040
我们不太清楚如何

00:02:35.040 --> 00:02:36.440
加载它，但这些参数的

00:02:36.440 --> 00:02:38.480
行为方式是一样的，

00:02:38.480 --> 00:02:39.599
但我只想指出，

00:02:39.599 --> 00:02:42.440
有两种不同的方法可以做到这一点，嗯，

00:02:42.440 --> 00:02:47.080
第一种方法是使用 iframe，嗯，

00:02:47.080 --> 00:02:49.840
有点像 YouTube 播放器，YT 播放器

00:02:49.840 --> 00:02:51.440
构造函数，这是一种将

00:02:51.440 --> 00:02:53.640
iframe 播放器加载到网页上的更程序化的方式，

00:02:53.640 --> 00:02:55.519
所以我

00:02:55.519 --> 00:02:57.319
这里有一个 JS 小提琴，

00:02:57.319 --> 00:02:59.840
演示了它的样子，

00:02:59.840 --> 00:03:01.480
嗯，它基本上涉及加载

00:03:01.480 --> 00:03:04.799
这个 JavaScript API 并调用 YT

00:03:04.799 --> 00:03:07.599
播放器构造函数并传入

00:03:07.599 --> 00:03:10.799
页面上 div 的 ID，你会在

00:03:10.799 --> 00:03:13.200
这里看到这个播放器栏

00:03:13.200 --> 00:03:15.239
部分，你可以将其传递给 YT

00:03:15.239 --> 00:03:16.959
播放器构造函数，所以如果你使用 YT 播放器构造函数，你可以在这里

00:03:16.959 --> 00:03:19.319
指定

00:03:19.319 --> 00:03:20.599
我们今天要介绍的所有选项，

00:03:22.920 --> 00:03:25.680
只需快速 J 跳过去

00:03:25.680 --> 00:03:28.360
这是我

00:03:28.360 --> 00:03:30.680
在 iframe API 入门指南中偷来的代码，

00:03:30.680 --> 00:03:33.560
我们讨论了如何

00:03:33.560 --> 00:03:37.080
实际获取该代码，因此请

00:03:37.080 --> 00:03:38.400
随意从那里借用，或者从那个

00:03:38.400 --> 00:03:40.879
JS 小提琴中借用，第二种将

00:03:40.879 --> 00:03:42.400
iframe 播放器加载到页面上的方法就是

00:03:42.400 --> 00:03:44.920
使用一个简单的 iframe 标签，

00:03:44.920 --> 00:03:47.760
你可以将它添加到任何网页中，并且

00:03:47.760 --> 00:03:49.680
它具有与

00:03:49.680 --> 00:03:51.360
YT 播放器构造函数

00:03:51.360 --> 00:03:53.079
相同的参数，它们实际上最终会

00:03:53.079 --> 00:03:55.239
创建相同的东西，只是 YT

00:03:55.239 --> 00:03:57.720
播放器构造函数是一种

00:03:57.720 --> 00:03:59.879
使用 JavaScript 创建此标签的编程方式，

00:03:59.879 --> 00:04:01.519
如果你只是

00:04:01.519 --> 00:04:03.920
写出 HTML 模板，或者

00:04:03.920 --> 00:04:05.599
你知道即使你根本不是 JavaScript

00:04:05.599 --> 00:04:06.959
程序员，只想

00:04:06.959 --> 00:04:09.879
在页面上包含一些 HTML，你也可以

00:04:09.879 --> 00:04:13.799
使用这个标签，

00:04:13.799 --> 00:04:15.640
我们将要讨论的相同参数可以放在

00:04:15.640 --> 00:04:17.680
你

00:04:17.680 --> 00:04:21.040
用作 iframe 标签源的 URL 的末尾，所以

00:04:21.040 --> 00:04:22.800
在这里我们有自动播放等于 z 和

00:04:22.800 --> 00:04:25.960
控件等于 0，你知道这

00:04:25.960 --> 00:04:27.560
对应于我们 看看

00:04:27.560 --> 00:04:30.440
我们的播放器，

00:04:30.440 --> 00:04:31.639
以及

00:04:31.639 --> 00:04:35.479
使用 iframe 标签的实际文档，你可以

00:04:35.479 --> 00:04:40.080
在这里找到。如果你看

00:04:40.080 --> 00:04:43.000
一下这里，我们会给出一些

00:04:43.000 --> 00:04:45.800
例子，这些是

00:04:45.800 --> 00:04:47.840
你实际使用

00:04:47.840 --> 00:04:49.039
这些参数的基本规则，我们将

00:04:49.039 --> 00:04:51.000
在你自己的代码中描述这些参数，

00:04:51.000 --> 00:04:53.680
所以我想从头开始介绍

00:04:53.680 --> 00:04:55.440
所有这些

00:04:55.440 --> 00:04:57.919
参数，我们

00:04:57.919 --> 00:05:00.560
在文档中对它们的含义有很好的解释，

00:05:00.560 --> 00:05:03.280
所以

00:05:03.280 --> 00:05:05.720
在某些情况下会有点重复，

00:05:05.720 --> 00:05:07.120
但我确实想强调一些

00:05:07.120 --> 00:05:09.720
最有用的参数，

00:05:09.720 --> 00:05:12.680
所以自动隐藏功能非常有用，

00:05:12.680 --> 00:05:15.600
这或多或少控制着

00:05:21.319 --> 00:05:24.560
YouTube 播放器底部控件的行为，它不一定是

00:05:24.560 --> 00:05:26.720
控件的初始状态，但

00:05:26.720 --> 00:05:27.919
它更像是

00:05:27.919 --> 00:05:30.520
播放开始后控件会发生什么，

00:05:30.520 --> 00:05:33.199
我将

00:05:33.199 --> 00:05:35.639
通过

00:05:35.639 --> 00:05:37.639
转到这个页面（

00:05:37.639 --> 00:05:40.720
我们的 YouTube 播放器演示）来演示设置这些不同值的方法，所以这是

00:05:40.720 --> 00:05:42.639
另一个非常棒的资源，它有点

00:05:42.639 --> 00:05:45.080
像 除了在

00:05:45.080 --> 00:05:47.560
这里编写代码或

00:05:47.560 --> 00:05:49.400
在 jsfiddle 中编写代码之外，还有一种替代方法，它只是一种

00:05:49.400 --> 00:05:51.520
在实时设置中使用这些参数的方法，

00:05:51.520 --> 00:05:55.080
嗯，你可以把

00:05:55.080 --> 00:05:57.000
它想象成我们的 API Explorer，如果

00:05:57.000 --> 00:05:59.919
你曾经将它用于我们的数据

00:05:59.919 --> 00:06:02.800
API，那么它相当于播放器

00:06:02.800 --> 00:06:06.080
API，所以它让你做的就是在

00:06:06.080 --> 00:06:07.560
右边开始为

00:06:07.560 --> 00:06:09.639
参数选择不同的值，

00:06:09.639 --> 00:06:10.720
我的意思是，我不会对

00:06:10.720 --> 00:06:11.960
我们要讨论的每个参数都这样做，

00:06:11.960 --> 00:06:14.160
而只是为了向你展示如何

00:06:14.160 --> 00:06:16.479
实时进行实验，而不必

00:06:16.479 --> 00:06:18.880
编写任何代码，让我尝试将

00:06:18.880 --> 00:06:21.479
自动隐藏设置为零，我

00:06:21.479 --> 00:06:22.800
将点击更新

00:06:22.800 --> 00:06:27.000
播放器，一旦我开始

00:06:27.240 --> 00:06:30.160
播放，你会看到这是一个非常

00:06:30.160 --> 00:06:32.720
古老的视频，嗯，实际上我

00:06:32.720 --> 00:06:34.440
计划做的一部分是用

00:06:34.440 --> 00:06:36.520
这个视频替换我们在这个演示中使用的默认视频，

00:06:36.520 --> 00:06:38.599
所以

00:06:38.599 --> 00:06:40.160
如果你碰巧在

00:06:40.160 --> 00:06:42.360
演示页面上观看这个，尝试

00:06:42.360 --> 00:06:43.039
这些

00:06:43.039 --> 00:06:45.639
参数，我们将有一个非常元的体验，所以要记住的主要事情是

00:06:47.680 --> 00:06:49.639
这里底部的控件 在

00:06:49.639 --> 00:06:51.960
播放过程中没有消失，如果我在

00:06:51.960 --> 00:06:55.280
这里将自动隐藏更改为

00:06:55.280 --> 00:06:57.639
一个更新

00:06:57.639 --> 00:07:00.879
播放器，这将使用参数在播放器中加载，

00:07:01.960 --> 00:07:04.280
您会看到，当我将鼠标悬停在

00:07:04.280 --> 00:07:06.000
控件上时，当我将

00:07:06.000 --> 00:07:09.199
鼠标移开时，控件就会消失，所以，

00:07:09.199 --> 00:07:11.160
对于您

00:07:11.160 --> 00:07:13.759
想要的体验，也许更像是一种向后倾斜的

00:07:13.759 --> 00:07:14.879
情况，人们不会

00:07:14.879 --> 00:07:16.160
与控件进行交互，或者您

00:07:16.160 --> 00:07:17.520
不希望控件覆盖

00:07:17.520 --> 00:07:20.120
视频播放，这是一个非常有用的

00:07:20.120 --> 00:07:23.120
参数，自动播放按字母顺序排列在

00:07:23.120 --> 00:07:25.120
列表中，嗯，有点

00:07:25.120 --> 00:07:26.560
不言自明，如果您添加

00:07:26.560 --> 00:07:28.720
自动播放参数，

00:07:28.720 --> 00:07:30.879
那么只要页面

00:07:30.879 --> 00:07:33.400
或iframe嵌入

00:07:33.400 --> 00:07:37.560
在页面上加载，视频就会开始播放，嗯，我会在这里给出一个快速演示，

00:07:37.560 --> 00:07:39.400
这次

00:07:43.440 --> 00:07:44.879
我不使用播放器，嗯，播放器演示页面，而是使用

00:07:44.879 --> 00:07:46.680
我们已经设置的JS fiddle，嗯，我

00:07:46.680 --> 00:07:48.919
只需将自动播放值更改为1，

00:07:48.919 --> 00:07:51.400
我将单击运行，您可以看到

00:07:51.400 --> 00:07:53.680
这里嵌入了它

00:07:53.680 --> 00:07:55.960
页面加载后立即开始播放，因此在

00:07:55.960 --> 00:07:57.520
某些情况下这很有用，

00:07:57.520 --> 00:07:58.840
在某些情况下则不是，您

00:07:58.840 --> 00:08:00.759
必须自行判断

00:08:00.759 --> 00:08:02.560
是否应该使用自动播放。CC

00:08:03.759 --> 00:08:07.319
加载策略

00:08:07.319 --> 00:08:09.919
控制默认情况下是否显示隐藏字幕或

00:08:09.919 --> 00:08:14.080
字幕，

00:08:14.080 --> 00:08:16.280
如果您没有

00:08:16.280 --> 00:08:18.520
为 CC 加载策略设置任何内容，则默认行为是

00:08:18.520 --> 00:08:20.759
用户的偏好。基本上，在

00:08:20.759 --> 00:08:21.960
YouTube 上，有一种方法可以

00:08:21.960 --> 00:08:23.800
表明您是否想要隐藏字幕，

00:08:23.800 --> 00:08:25.879
或者您不想要隐藏字幕，

00:08:25.879 --> 00:08:27.599
这通常会生效。如果您

00:08:27.599 --> 00:08:28.919
有特定的视频，并且您知道

00:08:28.919 --> 00:08:30.400
您始终希望显示隐藏字幕，那么

00:08:30.400 --> 00:08:33.760
您可以将 CC 加载策略设置为

00:08:33.760 --> 00:08:36.599
一种颜色，这有点有趣，嗯，这

00:08:36.599 --> 00:08:40.039
不是我所看到的广泛使用的东西，

00:08:40.039 --> 00:08:42.240
但嗯，在某些情况下，

00:08:42.240 --> 00:08:43.640
您可能想要一点

00:08:43.640 --> 00:08:45.880
光晕，比如说在您的播放器中，嗯，而

00:08:45.880 --> 00:08:49.720
您不想要默认行为，嗯，

00:08:49.720 --> 00:08:52.560
所以我将非常快速地转到播放器演示

00:08:52.560 --> 00:08:53.839
页面，并向您展示

00:08:53.839 --> 00:08:57.720
它的功能，您可以设置 颜色改为白色而

00:08:57.720 --> 00:09:02.360
不是红色，并且您更新

00:09:03.519 --> 00:09:05.959
播放器控件时，它们的外观应该会略有

00:09:05.959 --> 00:09:07.360
不同，具体取决于它们是

00:09:07.360 --> 00:09:09.800
红色还是白色，所以它基本上只是

00:09:09.800 --> 00:09:12.240
稍微改变了

00:09:12.240 --> 00:09:14.560
播放器上的品牌，您知道这不一定是

00:09:14.560 --> 00:09:15.720
世界上最有用的东西，但确实可以让

00:09:15.720 --> 00:09:17.399
您多一点

00:09:17.399 --> 00:09:20.399
控制权，嗯，说到控制，按字母顺序排列的下一项

00:09:20.399 --> 00:09:23.480
是控件，这

00:09:23.480 --> 00:09:26.920
实际上非常有用，嗯，在某些情况下，

00:09:26.920 --> 00:09:29.279
您可以

00:09:29.279 --> 00:09:31.279
通过将此

00:09:31.279 --> 00:09:36.079
值从默认值更改为特定

00:09:36.079 --> 00:09:38.640
选项（即两个）来实际看到很多性能优势，嗯，我们在文档中有一个注释，

00:09:38.640 --> 00:09:40.320
详细解释了

00:09:40.320 --> 00:09:43.360
它的作用，如果您阅读

00:09:43.360 --> 00:09:45.480
注释，它说控件 2 可以为

00:09:45.480 --> 00:09:47.839
您提供比默认行为更好的性能，

00:09:47.839 --> 00:09:50.480
嗯，之所以

00:09:50.480 --> 00:09:53.160
如此，是因为控件 2 有一种

00:09:53.160 --> 00:09:55.120
加载 IFR 嵌入式播放器的方式，

00:09:58.200 --> 00:10:01.120
默认情况下不会初始化底层的 Flash Play 播放器，嗯，它

00:10:01.120 --> 00:10:03.399
直到您实际

00:10:03.399 --> 00:10:05.839
单击视频缩略图开始

00:10:05.839 --> 00:10:09.399
播放时才会初始化它，嗯，这显然仅

00:10:09.399 --> 00:10:12.120
适用于涉及

00:10:12.120 --> 00:10:14.839
Flash Player 的播放，嗯，iframe 播放器可能会

00:10:14.839 --> 00:10:16.600
决定使用 HTML 5 视频

00:10:16.600 --> 00:10:18.240
相反，在这种情况下，

00:10:23.720 --> 00:10:26.800
设置控件确实会带来显著的性能提升，嗯，

00:10:26.800 --> 00:10:29.279
这可能是我们

00:10:29.279 --> 00:10:30.760
将来某个时候使用的默认设置，正如

00:10:30.760 --> 00:10:33.120
这里提到的，一旦一些 UI 问题得到

00:10:33.120 --> 00:10:35.279
解决，嗯，我会给你

00:10:35.279 --> 00:10:37.560
举个例子，说明你如何看到这种

00:10:37.560 --> 00:10:40.120
性能提升，嗯，它主要

00:10:40.120 --> 00:10:42.920
出现在当你有，比如说，我不想

00:10:42.920 --> 00:10:44.240
说一个具体的数量，但是如果你在

00:10:44.240 --> 00:10:45.839
同一个页面上有多个 iirm 嵌入，

00:10:45.839 --> 00:10:49.440
那么这里的这个，我认为

00:10:49.440 --> 00:10:50.839
可能有 50 个来自 Google

00:10:50.839 --> 00:10:52.839
开发者频道，所以

00:10:52.839 --> 00:10:55.600
我们要看的第一件事是行为，

00:10:55.600 --> 00:10:57.480
嗯，

00:10:57.480 --> 00:11:00.000
默认情况下，如果有一个控件，或者如果

00:11:00.000 --> 00:11:02.760
你省略控件，它是默认的，

00:11:02.760 --> 00:11:06.800
我可能需要一些时间让这些

00:11:06.800 --> 00:11:09.279
底层的 Flash 播放器全部

00:11:09.279 --> 00:11:11.639
初始化，你知道，这可能会增加一些

00:11:11.639 --> 00:11:13.800
延迟，直到你知道它们

00:11:13.800 --> 00:11:15.120
看起来已经准备好在

00:11:15.120 --> 00:11:18.480
页面上进行交互，所以

00:11:18.480 --> 00:11:20.440
不一定是最好的用户体验，嗯，

00:11:20.440 --> 00:11:21.560
如果你把同样的东西

00:11:21.560 --> 00:11:24.040
改成控件等于两个，

00:11:24.040 --> 00:11:26.120
明确 那么你就会看到

00:11:26.120 --> 00:11:29.040
更好的性能，这实际上非常了不起，

00:11:29.040 --> 00:11:31.839
嗯，所以发生的事情是，你

00:11:31.839 --> 00:11:33.399
知道它只是加载这些

00:11:33.399 --> 00:11:35.839
缩略图，它并没有

00:11:35.839 --> 00:11:39.040
为每个视频初始化 Flash Player，嗯，你

00:11:39.040 --> 00:11:41.320
知道你可以有，我不想说

00:11:41.320 --> 00:11:42.760
你应该在同一个页面上放置数千个嵌入，

00:11:42.760 --> 00:11:44.480
但是如果你碰巧

00:11:44.480 --> 00:11:46.240
在页面上有大量嵌入，

00:11:46.240 --> 00:11:48.320
你会看到

00:11:48.320 --> 00:11:50.320
差异，所以记住这一点非常重要，

00:11:51.360 --> 00:11:53.600
呃其他一些参数

00:11:53.600 --> 00:11:56.639
不一定那么令人兴奋，嗯，

00:11:56.639 --> 00:11:59.600
对于动作

00:11:59.600 --> 00:12:01.760
脚本播放器，有键盘支持，我不太确定

00:12:01.760 --> 00:12:03.480
你为什么要关掉它，嗯，我认为

00:12:03.480 --> 00:12:04.880
保持它开启其实挺好的，

00:12:04.880 --> 00:12:06.800
但是如果你愿意，我们可以选择关掉它，嗯，

00:12:08.040 --> 00:12:10.320
这个特定的参数

00:12:10.320 --> 00:12:14.600
非常重要，嗯，启用 JS API，

00:12:14.600 --> 00:12:17.519
它让你做的是确保你

00:12:17.519 --> 00:12:20.440
能够

00:12:20.440 --> 00:12:23.199
使用 JavaScript API 与页面上的 iframe 播放器对话，所以正如

00:12:23.199 --> 00:12:24.399
我提到的，我们实际上不会

00:12:26.120 --> 00:12:28.360
在这个特定的会话中讨论任何关于 JavaScript API 的内容，

00:12:28.360 --> 00:12:30.360
但是很多人 有 Ed

00:12:30.360 --> 00:12:33.399
它，嗯，有一种情况你确实

00:12:33.399 --> 00:12:34.720
需要确保明确

00:12:34.720 --> 00:12:36.920
设置它，那就是当你将

00:12:36.920 --> 00:12:39.360
iframe 标签直接写入

00:12:39.360 --> 00:12:42.360
页面时，嗯，

00:12:42.360 --> 00:12:45.639
有点像这样，因为当你

00:12:45.639 --> 00:12:48.639
使用 YT 播放器构造函数时，它

00:12:48.639 --> 00:12:50.399
基本上会默认自动

00:12:50.399 --> 00:12:53.360
为你设置，嗯，只是因为

00:12:53.360 --> 00:12:54.560
你使用

00:12:54.560 --> 00:12:56.079
JavaScript 来初始化播放器，所以

00:12:56.079 --> 00:12:57.279
你很可能会想要用

00:12:57.279 --> 00:12:59.279
JavaScript 与播放器对话，所以它

00:12:59.279 --> 00:13:00.760
总是会为你设置好，但

00:13:00.760 --> 00:13:02.880
如果你明确地将

00:13:02.880 --> 00:13:05.279
iframe 标签写入页面，情况就不是这样了，所以你真的

00:13:05.279 --> 00:13:06.880
需要确保你已经

00:13:06.880 --> 00:13:10.880
启用了 JSI JS API 设置为 1，这是

00:13:10.880 --> 00:13:15.839
与 iframe 播放器对话所必需的，

00:13:16.160 --> 00:13:19.360
嗯，结束标签，你知道

00:13:19.360 --> 00:13:21.360
字母表往下一点是

00:13:21.360 --> 00:13:23.160
开始，所以这是两个对应的

00:13:23.160 --> 00:13:26.160
标签，嗯，这给你一个非常简单的方法，

00:13:26.160 --> 00:13:27.760
可以在页面上放置一张床，

00:13:27.760 --> 00:13:29.320
这张床有自定义的结束时间

00:13:29.320 --> 00:13:31.639
和自定义的开始时间，嗯，所以你知道

00:13:31.639 --> 00:13:33.680
如果你有一个 3 分钟的视频，你

00:13:33.680 --> 00:13:35.880
真的想嵌入 在视频中间的 30 秒，

00:13:35.880 --> 00:13:37.760
您可以使用这

00:13:37.760 --> 00:13:39.639
两个标签来执行此操作，一旦

00:13:39.639 --> 00:13:42.399
播放到达结束标记，

00:13:42.399 --> 00:13:45.760
播放就会停止，嗯，这

00:13:45.760 --> 00:13:49.240
可能会很有用，呃 FS 参数不再

00:13:49.240 --> 00:13:51.920
非常有用，基本上可以让您

00:13:51.920 --> 00:13:54.360
控制

00:13:54.360 --> 00:13:56.759
动作脚本三播放器上是否有全屏按钮，

00:13:56.759 --> 00:13:58.759
但我认为它对

00:13:58.759 --> 00:14:01.639
HML 5 播放器没有影响，所以不太确定您为什么要

00:14:01.639 --> 00:14:05.880
更改该 IV 加载策略，它

00:14:05.880 --> 00:14:07.839
控制是否呃，我

00:14:07.839 --> 00:14:10.279
猜交互式视频注释呃，

00:14:10.279 --> 00:14:12.920
由于缺乏更好的

00:14:12.920 --> 00:14:14.560
描述方式，它默认显示在您的视频上

00:14:14.560 --> 00:14:17.320
嗯，所以这里有几个

00:14:17.320 --> 00:14:18.920
不同的值，它是一或

00:14:18.920 --> 00:14:21.600
三嗯，基本上设置它一

00:14:21.600 --> 00:14:23.040
将确保显示这些注释，将

00:14:23.040 --> 00:14:24.519
其发送到三将

00:14:24.519 --> 00:14:26.199
确保它们默认不显示，

00:14:26.199 --> 00:14:28.360
但在任何时候，用户都可以

00:14:29.240 --> 00:14:31.079
在播放器中明确更改设置，如果他们想要

00:14:31.079 --> 00:14:33.399
显示或隐藏

00:14:33.399 --> 00:14:35.240
注释呃列表是一个非常

00:14:35.240 --> 00:14:37.279
有趣的列表，并且有很多

00:14:37.279 --> 00:14:39.440
关于列表的内容，所以我实际上

00:14:39.440 --> 00:14:42.519
将推迟到整个

00:14:42.519 --> 00:14:44.800
博客 我们整理了一篇文章，

00:14:44.800 --> 00:14:48.480
讨论了

00:14:48.480 --> 00:14:50.480
列表参数和列表

00:14:50.480 --> 00:14:52.720
类型参数（关联

00:14:52.720 --> 00:14:54.839
参数）可以采用的不同类型的值，我会

00:14:54.839 --> 00:14:56.680
在视频注释中链接到这篇博文，以便您

00:14:56.680 --> 00:14:59.160
可以更详细地阅读，但

00:14:59.160 --> 00:15:00.399
总而言之，这是一种

00:15:00.399 --> 00:15:03.000
非常简单的方法，可以

00:15:03.000 --> 00:15:05.680
在您的页面上使用一个简单的嵌入式播放器，并使用

00:15:05.680 --> 00:15:08.440
它来显示视频列表，而

00:15:08.440 --> 00:15:10.519
无需提前对视频 ID 进行硬编码，

00:15:10.519 --> 00:15:12.639
这样您就可以

00:15:12.639 --> 00:15:14.759
在页面上有一个特定的播放器，然后说您

00:15:14.759 --> 00:15:16.680
知道播放

00:15:16.680 --> 00:15:19.399
特定 YouTube 频道或

00:15:19.399 --> 00:15:22.880
特定播放列表或特定搜索

00:15:22.880 --> 00:15:24.800
词的最新视频，即使如此，您也可以说您知道这

00:15:24.800 --> 00:15:27.040
是一个嵌入式播放器，它将显示与

00:15:27.040 --> 00:15:29.360
搜索词 YouTube API 匹配的最新视频，类似这样的

00:15:29.360 --> 00:15:32.560
内容，

00:15:32.560 --> 00:15:35.040
它非常有用，我认为

00:15:35.040 --> 00:15:36.360
了解它的人并不多，

00:15:36.360 --> 00:15:38.199
所以希望人们能够观看这篇文章并

00:15:38.199 --> 00:15:40.560
开始更多地使用它，列表

00:15:40.560 --> 00:15:43.360
类型与列表

00:15:43.360 --> 00:15:46.399
参数相辅相成，有一个循环参数，

00:15:46.399 --> 00:15:49.519
循环参数将，如

00:15:49.519 --> 00:15:52.279
文档中所述，允许您

00:15:52.279 --> 00:15:54.240
自动重新开始播放

00:15:54.240 --> 00:15:57.639
视频 播放结束时，

00:15:58.839 --> 00:16:00.440
如果您尝试对单个视频执行此操作，则需要进行一些 hack 操作，即

00:16:00.440 --> 00:16:02.120
创建一个

00:16:02.120 --> 00:16:04.399
仅包含一个视频条目的播放列表，因此

00:16:04.399 --> 00:16:07.040
我们在这里提供了更多信息，

00:16:07.040 --> 00:16:08.480
适度的品牌推广

00:16:08.480 --> 00:16:10.519
在另一篇博客文章中进行了介绍，

00:16:10.519 --> 00:16:13.040
我们也将链接到注释，

00:16:13.040 --> 00:16:15.519
它讨论了

00:16:15.519 --> 00:16:18.560
底部的选项，嗯，它不完全是一个

00:16:18.560 --> 00:16:21.160
完整的徽标列表播放器，嗯，您知道

00:16:21.160 --> 00:16:24.360
仍然有一个 YouTube 徽标，嗯，

00:16:24.360 --> 00:16:25.959
我认为它会显示在右上角的暂停屏幕

00:16:25.959 --> 00:16:28.160
或排队

00:16:28.160 --> 00:16:29.279
屏幕上，

00:16:29.279 --> 00:16:31.160
但这是一个您可以

00:16:31.160 --> 00:16:34.120
设置的参数，可以淡化

00:16:34.120 --> 00:16:37.839
播放器上的 YouTube 品牌推广，嗯，

00:16:39.519 --> 00:16:42.079
如果您知道有一种情况是

00:16:42.079 --> 00:16:43.680
您想要嵌入但又不想

00:16:43.680 --> 00:16:46.160
使其完全

00:16:46.160 --> 00:16:49.480
YouTubed，那么您可能需要记住这一点，origin 参数是

00:16:49.480 --> 00:16:52.839
当您

00:16:52.839 --> 00:16:55.160
使用 iframe 嵌入标签时可以使用的参数，并且您

00:16:55.160 --> 00:16:58.120
将

00:16:58.120 --> 00:17:00.399
使用 JavaScript 与 iframe 嵌入进行交互，因此

00:17:00.399 --> 00:17:01.880
如前所述，您可能需要

00:17:01.880 --> 00:17:04.919
明确地放入 启用 JS API 后，您

00:17:04.919 --> 00:17:06.839
可能还需要在此处添加 origin

00:17:06.839 --> 00:17:09.079
参数，并将其设置

00:17:09.079 --> 00:17:12.919
为网页的完整 URL。

00:17:12.919 --> 00:17:15.319
这是一种安全机制，

00:17:15.319 --> 00:17:18.319
用于确保只有

00:17:18.319 --> 00:17:20.559
从您的主机网页运行的 JavaScript 才能与

00:17:20.559 --> 00:17:23.880
播放器通信。如果您

00:17:23.880 --> 00:17:25.959
使用的是 YT 播放器构造函数，它会

00:17:25.959 --> 00:17:27.439
自动为您设置。因此，

00:17:27.439 --> 00:17:29.320
只有在

00:17:31.280 --> 00:17:33.600
明确编写 iframe

00:17:33.600 --> 00:17:36.440
标签时才需要担心这个问题。有时人们会遇到这样的

00:17:36.440 --> 00:17:38.520
问题：他们本应使用

00:17:38.520 --> 00:17:40.720
iame 标签，并尝试

00:17:40.720 --> 00:17:43.240
使用 JavaScript 与其通信，但他们的代码

00:17:43.240 --> 00:17:46.240
无法正常工作。

00:17:46.240 --> 00:17:47.799
在这种情况下，需要调试的一件事是检查您是否

00:17:47.799 --> 00:17:49.559
设置了 origin 参数。如果设置了，请

00:17:49.559 --> 00:17:51.960
确保它确实设置为

00:17:55.039 --> 00:17:57.200
您

00:17:57.200 --> 00:18:00.480
网站主机名的完整 URL。请输入播放器 piid。这

00:18:00.480 --> 00:18:02.320
实际上不再重要，它更像是一种

00:18:02.320 --> 00:18:04.600
使用旧 JavaScript API

00:18:04.600 --> 00:18:06.080
来识别

00:18:06.080 --> 00:18:08.799
播放器的方式。有一个播放列表参数，

00:18:08.799 --> 00:18:10.440
很容易与

00:18:10.440 --> 00:18:12.840
列表参数混淆。 它会

00:18:12.840 --> 00:18:14.080
接受一组不同的

00:18:14.080 --> 00:18:16.520
值，而播放列表参数会

00:18:16.520 --> 00:18:19.039
接受视频 ID 列表，所以这不一定是

00:18:20.440 --> 00:18:22.120
YouTube 上存在的真实播放列表，也不一定是

00:18:25.840 --> 00:18:27.880
来自特定频道的上传内容，它可以是任何

00:18:30.039 --> 00:18:32.000
你想要的视频创意列表，这是一种

00:18:32.000 --> 00:18:34.440
动态生成播放

00:18:34.440 --> 00:18:37.600
列表的方式，所以在某些情况下，这

00:18:37.600 --> 00:18:40.440
可能会很有用，嗯，有一个真正的

00:18:40.440 --> 00:18:42.840
参数，它控制

00:18:42.840 --> 00:18:46.080
视频的结束画面是否

00:18:46.080 --> 00:18:49.120
显示相关视频，嗯，大多数

00:18:49.120 --> 00:18:50.440
人都知道，

00:18:50.440 --> 00:18:52.440
一旦你到达 YouTube

00:18:52.440 --> 00:18:54.919
视频的结尾，你会看到一些

00:18:54.919 --> 00:18:56.600
缩略图配置，其中包含

00:18:56.600 --> 00:18:58.880
播放其他视频的建议，嗯，

00:18:58.880 --> 00:19:00.600
我们可以关闭它，

00:19:00.600 --> 00:19:02.640
如果你不想在

00:19:02.640 --> 00:19:04.559
你的

00:19:04.559 --> 00:19:08.400
嵌入视频中显示它，显示信息会

00:19:08.400 --> 00:19:10.280
控制

00:19:10.280 --> 00:19:13.919
在排队状态下最初显示的内容，

00:19:13.919 --> 00:19:16.880
嗯，有办法采取

00:19:16.880 --> 00:19:18.480
默认行为，并将其稍微

00:19:18.480 --> 00:19:19.840
调低一点，这样你在

00:19:19.840 --> 00:19:23.120
视频播放前就看不到那么多 开始播放，

00:19:23.120 --> 00:19:25.400
你可以将“显示信息”设置为零，如果

00:19:25.400 --> 00:19:27.559
你想要的话，显示信息实际上

00:19:27.559 --> 00:19:29.640
在另一种情况下使用，那就是当

00:19:29.640 --> 00:19:32.520
你使用列表播放器时，

00:19:32.520 --> 00:19:35.600
明确设置“显示 EO”等于 1，

00:19:35.600 --> 00:19:38.280
这样

00:19:38.280 --> 00:19:41.799
你的列表播放器中就会有一个提示视频的列表，

00:19:41.799 --> 00:19:43.600
所以如果我们看一下这里，这

00:19:43.600 --> 00:19:46.919
是一个将“显示信息”设置为 1 的情况，嗯，

00:19:46.919 --> 00:19:48.440
这是一个播放列表播放器，它会

00:19:48.440 --> 00:19:49.559
加载来自 Google

00:19:49.559 --> 00:19:51.360
开发者的所有内容，你会看到在

00:19:51.360 --> 00:19:53.320
播放开始之前，你就会看到一个

00:19:53.320 --> 00:19:55.760
方便的缩略图，其中包含

00:19:55.760 --> 00:19:57.159
在播放列表中排队等待播放

00:19:57.159 --> 00:19:59.280
下一个视频的所有视频，它让你

00:19:59.280 --> 00:20:01.880
选择要从哪个开始，所以它

00:20:01.880 --> 00:20:03.679
实际上在

00:20:03.679 --> 00:20:06.960
你执行列表

00:20:07.280 --> 00:20:09.880
播放器开始参数的场景中非常有用，我们

00:20:09.880 --> 00:20:13.000
之前确实讨论过，然后使用结束

00:20:13.000 --> 00:20:16.080
参数，最后一个是主题

00:20:16.080 --> 00:20:18.000
参数，嗯，这类似于

00:20:18.000 --> 00:20:19.559
之前的颜色参数，它

00:20:19.559 --> 00:20:22.720
只是让你更改

00:20:22.720 --> 00:20:24.679
播放器的默认外观，并

00:20:24.679 --> 00:20:28.799
在这方面给你一定程度的自定义，

00:20:28.799 --> 00:20:31.080
嗯，现在有几个弃用的

00:20:31.080 --> 00:20:32.919
参数，嗯，我 我不会讨论

00:20:32.919 --> 00:20:34.799
那些已经被弃用的参数，因为我们

00:20:34.799 --> 00:20:36.760
不希望人们再使用它们了。呃，我

00:20:36.760 --> 00:20:39.320
想指出的是，

00:20:39.320 --> 00:20:41.400
偶尔会有一些参数，我不想说是谣言，

00:20:41.400 --> 00:20:43.400
但

00:20:43.400 --> 00:20:45.200
人们会四处传播某些参数，

00:20:45.200 --> 00:20:46.799
说“你知道你可以使用

00:20:46.799 --> 00:20:49.280
这个播放器参数来强制 HTML 5

00:20:49.280 --> 00:20:52.159
播放，或者使用这个播放器参数来

00:20:52.159 --> 00:20:53.720
强制以特定的质量

00:20:53.720 --> 00:20:56.080
级别播放”之类的。嗯，

00:20:56.080 --> 00:20:58.320
这些参数没有记录是有原因的。嗯，

00:20:58.320 --> 00:21:00.280
我们真的不希望人们使用

00:21:02.240 --> 00:21:03.960
文档中没有明确提到的参数，部分原因是

00:21:03.960 --> 00:21:05.360
我们没有完全致力于

00:21:05.360 --> 00:21:08.159
支持它们。嗯，它们有时

00:21:08.159 --> 00:21:10.679
在某些情况下会起作用，但它们可能会在

00:21:10.679 --> 00:21:12.640
将来的任何时候停止工作，所以我们

00:21:12.640 --> 00:21:14.400
真的不希望人们构建

00:21:14.400 --> 00:21:17.480
依赖于这些参数的东西。嗯，

00:21:17.480 --> 00:21:19.679
还有一些情况，你知道

00:21:19.679 --> 00:21:23.200
我们希望控制权掌握在

00:21:23.200 --> 00:21:25.720
查看嵌入内容的人手中，所以

00:21:25.720 --> 00:21:26.960
你知道我们希望对

00:21:26.960 --> 00:21:30.880
默认播放的控制权真正掌握在

00:21:30.880 --> 00:21:33.240
使用网络浏览器的人手中，

00:21:33.240 --> 00:21:34.720
你知道可能

00:21:34.720 --> 00:21:38.320
启用了 Flash，嗯，或者你知道默认的自动

00:21:38.320 --> 00:21:41.240
质量 在许多情况下，质量级别可

00:21:41.240 --> 00:21:44.039
提供最佳的播放体验，

00:21:44.039 --> 00:21:46.760
因此，如果您没有看到某个参数被列为

00:21:46.760 --> 00:21:48.440
受支持的参数，请不要

00:21:48.440 --> 00:21:51.080
使用它，并且您知道，如果您碰巧

00:21:51.080 --> 00:21:52.600
发现某些参数，请不要

00:21:52.600 --> 00:21:54.360
抱怨它们在

00:21:54.360 --> 00:21:56.559
未来某个时候出现故障，我想这是

00:21:56.559 --> 00:21:58.559
主要的收获，

00:21:58.559 --> 00:22:00.159
嗯，涵盖了所有

00:22:00.159 --> 00:22:02.279
受支持参数的列表，嗯，我们这里有很多

00:22:02.279 --> 00:22:04.360
不同的网络资料，请务必

00:22:04.360 --> 00:22:05.679
查看视频上的注释，

00:22:05.679 --> 00:22:08.159
以获取我们

00:22:08.159 --> 00:22:11.039
今天介绍的所有内容的链接，嗯，非常感谢您的

00:22:11.039 --> 00:22:13.360
收看，嗯，我们会加入我们，

00:22:13.360 --> 00:22:16.880
下周见，

00:22:22.600 --> 00:22:25.600
欢呼

