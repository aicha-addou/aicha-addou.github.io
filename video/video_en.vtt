WEBVTT

00:00:10.349 --> 00:00:11.349
JEFF POSNICK: Hey, everybody.

00:00:11.349 --> 00:00:14.030
Welcome to this week's show of
YouTube Developers Live.

00:00:14.030 --> 00:00:16.180
I'm Jeff Posnick coming to
you from New York City.

00:00:16.180 --> 00:00:19.420
I'm a member of the Developer
Relations team.

00:00:19.420 --> 00:00:21.490
And this week I'm really excited
to talk to you about

00:00:21.490 --> 00:00:24.540
different ways of customizing
the YouTube-embedded player.

00:00:24.540 --> 00:00:28.029
Before I get started though, I
want a couple of ground rules

00:00:28.029 --> 00:00:31.539
to just talk about what we're
going to be covering in

00:00:31.539 --> 00:00:32.539
today's show.

00:00:32.539 --> 00:00:34.399
There are a lot of different
embedded players, and there's

00:00:34.399 --> 00:00:36.800
lots of ways to customize
them.

00:00:36.800 --> 00:00:39.920
But for this particular show,
we're going to be focusing on

00:00:39.920 --> 00:00:45.170
customizing be iframe-embedded
player, which is our current

00:00:45.170 --> 00:00:48.699
recommended way of embedding
videos on web pages.

00:00:48.699 --> 00:00:50.219
And we're going to specifically
focus on the

00:00:50.219 --> 00:00:54.899
options that are most relevant
for desktop web browsers.

00:00:54.899 --> 00:00:58.170
A lot of these customization
options we'll talk about do

00:00:58.170 --> 00:01:02.159
have some effect with mobile
browser playback, but not all

00:01:02.159 --> 00:01:03.159
of them do.

00:01:03.159 --> 00:01:06.500
And we're going to just focus
today on how these options

00:01:06.500 --> 00:01:08.600
affect desktop playback.

00:01:08.600 --> 00:01:10.880
Another thing that we're not
going to be covering today is

00:01:10.880 --> 00:01:15.100
using the JavaScript API for
controlling playback.

00:01:15.100 --> 00:01:16.840
This is obviously a very
interesting topic and a very

00:01:16.840 --> 00:01:18.760
important topic, it's just a
little bit outside the scope

00:01:18.760 --> 00:01:20.530
of what we wanted
to talk about.

00:01:20.530 --> 00:01:23.140
So we're not going to be
covering any of the methods

00:01:23.140 --> 00:01:25.280
that you could use in JavaScript
to start playback

00:01:25.280 --> 00:01:29.370
or control playback, or receive
events when playback

00:01:29.370 --> 00:01:31.280
changes happen in the player.

00:01:31.280 --> 00:01:33.829
What we are going to be covering
is things that are

00:01:33.829 --> 00:01:38.039
covered in the documentation
on the specific page, so if

00:01:38.039 --> 00:01:41.320
you pull that up, we'll
share that with you.

00:01:41.320 --> 00:01:44.759
And as I'm going through this
demo, a lot of what I'm going

00:01:44.759 --> 00:01:47.259
to be covering refers to
specific web pages.

00:01:47.259 --> 00:01:50.250
When we go back and post this
video on YouTube, I'll have

00:01:50.250 --> 00:01:52.619
annotations linking to all the
web pages, so that you could

00:01:52.619 --> 00:01:56.950
go there and check them
out yourself.

00:01:56.950 --> 00:02:00.909
So this is our main jumping off
point for talking about

00:02:00.909 --> 00:02:03.060
the customization that
you could do to the

00:02:03.060 --> 00:02:06.590
YouTube-embedded
iframe player.

00:02:06.590 --> 00:02:09.910
And you could get here from
our main Developers.Googl

00:02:09.910 --> 00:02:13.080
e.com/YouTubedocumentation.

00:02:13.080 --> 00:02:17.471
And everything in this parameter
section in the docks

00:02:17.471 --> 00:02:20.960
is fair game for what we're
going to talk about now.

00:02:20.960 --> 00:02:24.330
One other thing before I
actually get into explaining

00:02:24.330 --> 00:02:26.750
these parameters is explain
the two different types of

00:02:26.750 --> 00:02:31.010
ways that you can load the
iframe-embedded player onto

00:02:31.010 --> 00:02:32.790
your web page.

00:02:32.790 --> 00:02:35.580
And we're kind of agnostic as
to the way in which you load

00:02:35.580 --> 00:02:37.410
it, these parameters are going
to behave the same way

00:02:37.410 --> 00:02:38.410
regardless.

00:02:38.410 --> 00:02:40.390
But I just wanted to point out
that there are two different

00:02:40.390 --> 00:02:42.520
ways of doing it.

00:02:42.520 --> 00:02:48.080
The first way is using the
iframes kind of like YouTube

00:02:48.080 --> 00:02:49.720
player, YT.

00:02:49.720 --> 00:02:50.720
Player constructor.

00:02:50.720 --> 00:02:53.220
And this is a more programmatic
way of loading

00:02:53.220 --> 00:02:54.930
the iframe player onto
your web page.

00:02:54.930 --> 00:02:58.050
So I have this jsFiddle right
here that demonstrates what

00:02:58.050 --> 00:02:59.790
that will look like.

00:02:59.790 --> 00:03:03.980
It basically involves loading
in this JavaScript API and

00:03:03.980 --> 00:03:05.080
calling the YT.

00:03:05.080 --> 00:03:08.140
Player constructor, and passing
in the ID of a div

00:03:08.140 --> 00:03:10.490
that's on your page.

00:03:10.490 --> 00:03:13.600
And you'll see here that there
is this playerVars section

00:03:13.600 --> 00:03:15.490
that you could pass
in to the YT.

00:03:15.490 --> 00:03:16.490
Player constructors.

00:03:16.490 --> 00:03:19.480
So this is where you get to
specify all the options that

00:03:19.480 --> 00:03:21.650
we're going to be covering today
if you're using the YT.

00:03:21.650 --> 00:03:23.160
PLayer constructor.

00:03:23.160 --> 00:03:27.070
And just quickly jumping over
here, this is where I stole

00:03:27.070 --> 00:03:30.220
that code from in our Getting
Started guide

00:03:30.220 --> 00:03:32.770
for the iframe API.

00:03:32.770 --> 00:03:36.930
We talk about how you could
actually get that code.

00:03:36.930 --> 00:03:40.200
So feel free to borrow it there
or from that jsFiddle.

00:03:40.200 --> 00:03:41.950
The second way that you load
the iframe player onto your

00:03:41.950 --> 00:03:45.370
page is just with a simple
iframe tag that you could add

00:03:45.370 --> 00:03:47.740
to any web page.

00:03:47.740 --> 00:03:50.580
And this has the same sort of
parameters that the YT.

00:03:50.580 --> 00:03:52.270
Player constructor is,
kind under the hood.

00:03:52.270 --> 00:03:54.750
They really end up creating
the same thing.

00:03:54.750 --> 00:03:55.750
Just that the YT.

00:03:55.750 --> 00:03:58.800
Player constructor is a
programmatic way of creating

00:03:58.800 --> 00:04:00.840
this tag using JavaScript.

00:04:00.840 --> 00:04:02.860
This is if you're just writing
out [? initiable ?]

00:04:02.860 --> 00:04:06.060
template, or even if you're not
a JavaScript programmer at

00:04:06.060 --> 00:04:09.710
all and just want to include
some HTML on your page, you

00:04:09.710 --> 00:04:12.430
could use this tag.

00:04:12.430 --> 00:04:15.590
And the same parameters we are
going to be talking about can

00:04:15.590 --> 00:04:19.340
go at the very end of the URL
that you use as a source of

00:04:19.340 --> 00:04:20.419
the iframe tag.

00:04:20.419 --> 00:04:23.180
So over here we have autoplay
equals 0 and

00:04:23.180 --> 00:04:25.139
controls equals 0.

00:04:25.139 --> 00:04:29.810
And that corresponds to what
we're seeing over here for the

00:04:29.810 --> 00:04:30.810
playerVars.

00:04:30.810 --> 00:04:36.140
And the actual documentation for
using that iframe tag is

00:04:36.140 --> 00:04:38.250
found over here.

00:04:38.250 --> 00:04:44.120
If you look in the docs over
here, we give some examples.

00:04:44.120 --> 00:04:47.930
So that's the ground rules for
how you actually will use

00:04:47.930 --> 00:04:49.101
these parameters that
we are going to be

00:04:49.101 --> 00:04:52.220
describing in your own code.

00:04:52.220 --> 00:04:54.900
So I just wanted to run through
pretty much from the

00:04:54.900 --> 00:04:56.970
top, all these parameters
here.

00:04:56.970 --> 00:05:00.660
We do have really nice
explanations what they mean in

00:05:00.660 --> 00:05:01.690
the documentation.

00:05:01.690 --> 00:05:05.910
So it's going to be a little bit
repetitive in some cases.

00:05:05.910 --> 00:05:08.550
But I did want to highlight some
specific ones that are

00:05:08.550 --> 00:05:09.580
the most useful.

00:05:09.580 --> 00:05:13.760
So autohide comes in
handy quite a bit.

00:05:13.760 --> 00:05:17.960
This is something that controls
the behavior of the

00:05:17.960 --> 00:05:21.401
controls, more or less, that
are on the bottom of the

00:05:21.401 --> 00:05:22.940
YouTube Player.

00:05:22.940 --> 00:05:26.470
It's not necessarily the initial
state of the controls,

00:05:26.470 --> 00:05:28.600
but it's more like what happens
the controls once

00:05:28.600 --> 00:05:30.790
playback starts.

00:05:30.790 --> 00:05:33.830
And I'm going to demonstrate
the ways of setting those

00:05:33.830 --> 00:05:37.680
different values by going to
this page over here, which is

00:05:37.680 --> 00:05:39.660
our YouTube player demo.

00:05:39.660 --> 00:05:42.670
So this is another really
great resource.

00:05:42.670 --> 00:05:47.330
And it's an alternative to
writing this code over here or

00:05:47.330 --> 00:05:48.330
writing this in jsFiddle.

00:05:48.330 --> 00:05:51.810
It's just a way to play around
with these parameters in a

00:05:51.810 --> 00:05:54.410
live setting.

00:05:54.410 --> 00:05:57.210
And we can think of it like our
API explorer, if you've

00:05:57.210 --> 00:06:00.550
ever used that for
our data APIs.

00:06:00.550 --> 00:06:03.900
This is the equivalent
for our player APIs.

00:06:03.900 --> 00:06:06.970
So what it lets you do is go
over here on the right and

00:06:06.970 --> 00:06:09.710
start choosing different values
for the parameters.

00:06:09.710 --> 00:06:11.570
And I'm not going to do this
for every single parameter

00:06:11.570 --> 00:06:15.000
that we didn't talk about, but
just to show you how you could

00:06:15.000 --> 00:06:16.910
experiment in real time
without having

00:06:16.910 --> 00:06:18.230
to write any code.

00:06:18.230 --> 00:06:21.240
Let me just try setting autohide
to 0 over here.

00:06:21.240 --> 00:06:24.050
I'm going to click
Update Player.

00:06:24.050 --> 00:06:28.720
And once I set it,
Begin Playback.

00:06:28.720 --> 00:06:31.160
This is a very old video.

00:06:31.160 --> 00:06:34.080
Actually, part of what I plan
on doing is replacing the

00:06:34.080 --> 00:06:37.230
default video that we use in
this demo with this video, so

00:06:37.230 --> 00:06:39.680
we'll have a very meta
experience, if you happen to

00:06:39.680 --> 00:06:42.500
be watching this while on the
demo page trying out these

00:06:42.500 --> 00:06:44.110
parameters.

00:06:44.110 --> 00:06:47.030
So the main thing to keep in
mind though is that the

00:06:47.030 --> 00:06:48.560
controls at the bottom
over here did not

00:06:48.560 --> 00:06:51.200
disappear during playback.

00:06:51.200 --> 00:06:56.650
And if I were to go over here
and change the autohide to 1,

00:06:56.650 --> 00:06:57.700
Update Player--

00:06:57.700 --> 00:07:03.090
it says, loading in the player
with the parameters--

00:07:03.090 --> 00:07:05.870
you'll see that when I mouse
over, the controls are there.

00:07:05.870 --> 00:07:08.120
When I move the mouse away,
the controls disappear.

00:07:08.120 --> 00:07:13.150
So for experiences where you
want maybe a more of lean-back

00:07:13.150 --> 00:07:15.430
type of situation, where people
aren't going to be

00:07:15.430 --> 00:07:17.310
interacting with the controls,
or you don't want the controls

00:07:17.310 --> 00:07:21.710
to overlay the video playback,
it's a very useful parameter.

00:07:21.710 --> 00:07:25.032
Autoplay is next on the
list alphabetically.

00:07:25.032 --> 00:07:27.360
Somewhat self-explanatory, if
you add in the autoplay

00:07:27.360 --> 00:07:31.419
parameter, then the video will
start playing back as soon as

00:07:31.419 --> 00:07:34.770
the iframe embed is loaded
on the page.

00:07:34.770 --> 00:07:38.190
I'll give a quick demo
of that over here.

00:07:38.190 --> 00:07:43.480
And this time, instead of using
the player demo page,

00:07:43.480 --> 00:07:46.300
I'm going to use that jsFiddle
that we have set up.

00:07:46.300 --> 00:07:48.430
And I'm going to just change
the autoplay value to 1.

00:07:48.430 --> 00:07:50.370
I'm going to click Run.

00:07:50.370 --> 00:07:52.690
And you could see,
here's the embed.

00:07:52.690 --> 00:07:55.810
It started playing as soon
as the page loads.

00:07:55.810 --> 00:07:57.770
So there are certain scenarios
where that's useful, certain

00:07:57.770 --> 00:07:58.990
scenarios where it's not.

00:07:58.990 --> 00:08:02.520
You have to use your judgment
as to whether autoplaying is

00:08:02.520 --> 00:08:04.910
the right thing to do.

00:08:04.910 --> 00:08:09.030
cc_load_policy is something that
controls whether closed

00:08:09.030 --> 00:08:13.530
captions or subtitles are
displayed by default.

00:08:13.530 --> 00:08:17.300
And the default behavior--
we don't set anything for

00:08:17.300 --> 00:08:18.300
cc_load_policy--

00:08:18.300 --> 00:08:21.180
is that the user's preferences
[? basic ?] on YouTube.

00:08:21.180 --> 00:08:23.389
There is a way of going in and
saying whether you want closed

00:08:23.389 --> 00:08:26.060
captions or you don't want
closed captions.

00:08:26.060 --> 00:08:27.270
That's normally what
takes effect.

00:08:27.270 --> 00:08:29.380
If you have a specific video and
you know that you always

00:08:29.380 --> 00:08:31.860
want the closed captions to
be shown, you could set

00:08:31.860 --> 00:08:34.370
cc_load_policy to 1.

00:08:34.370 --> 00:08:36.599
Color's a bit interesting.

00:08:36.599 --> 00:08:41.019
It's not something that I see
widely used and necessarily,

00:08:41.019 --> 00:08:44.029
but there are some cases where
you might want a little bit of

00:08:44.029 --> 00:08:45.670
flair, let's say,
in your player.

00:08:45.670 --> 00:08:48.050
And you don't want the
default behavior.

00:08:48.050 --> 00:08:53.089
So I'm going to go to the
player demo page really

00:08:53.089 --> 00:08:54.999
quickly and just show
you what it does.

00:08:54.999 --> 00:09:02.779
You could set color to white
instead of red, and you update

00:09:02.779 --> 00:09:05.060
the player.

00:09:05.060 --> 00:09:06.990
Controls should look slightly
different depending upon

00:09:06.990 --> 00:09:08.910
whether they're red or white.

00:09:08.910 --> 00:09:11.829
So it just basically changes the
branding a little bit on

00:09:11.829 --> 00:09:13.819
the player.

00:09:13.819 --> 00:09:15.661
Not necessarily the most useful
thing in the world, but

00:09:15.661 --> 00:09:18.720
it does give you a little
bit more control.

00:09:18.720 --> 00:09:22.449
Speaking of control, next item
alphabetically is controls.

00:09:22.449 --> 00:09:24.610
And this is actually
quite useful.

00:09:24.610 --> 00:09:29.300
There are cases where you can
actually see a lot of

00:09:29.300 --> 00:09:33.160
performance benefits by changing
this value from the

00:09:33.160 --> 00:09:38.079
defaults to a specific
option, which is 2.

00:09:38.079 --> 00:09:40.240
We have a note in the
documentation explaining more

00:09:40.240 --> 00:09:42.470
about what this does.

00:09:42.470 --> 00:09:45.509
And if you read the note, it
says that controls=2 can give

00:09:45.509 --> 00:09:49.420
you a performance improvement
over the default behavior.

00:09:49.420 --> 00:09:53.399
And the reason why that is is
controls=2 has a way of

00:09:53.399 --> 00:09:55.860
loading the iframe embedded
player that does not

00:09:55.860 --> 00:10:00.970
initialize the underlying
Flash player by default.

00:10:00.970 --> 00:10:04.819
It doesn't initialize it until
you actually click on the

00:10:04.819 --> 00:10:07.680
video thumbnail to start
the playback.

00:10:07.680 --> 00:10:12.189
This obviously only applies to
playbacks that do involve the

00:10:12.189 --> 00:10:13.670
Flash player.

00:10:13.670 --> 00:10:16.560
The iframe player might decide
that HTML5 video is going to

00:10:16.560 --> 00:10:19.480
be used instead, in which case
this isn't quite as important.

00:10:19.480 --> 00:10:21.790
But in situations where Flash
playback is being used, you

00:10:21.790 --> 00:10:24.860
could really see a significant
performance benefit from

00:10:24.860 --> 00:10:26.560
setting controls=2.

00:10:26.560 --> 00:10:29.940
And that might be the default
that we use at some point in

00:10:29.940 --> 00:10:33.139
the future, as mentioned here,
as soon as some UI issues are

00:10:33.139 --> 00:10:34.139
worked out.

00:10:34.139 --> 00:10:37.389
And I'm going to give you an
example of how you could see

00:10:37.389 --> 00:10:39.610
that performance benefit.

00:10:39.610 --> 00:10:41.679
It mainly comes across
when you have--

00:10:41.679 --> 00:10:44.350
let's say, I don't want to say
a specific number, but if you

00:10:44.350 --> 00:10:46.240
have multiple iframe embeds
on the same page.

00:10:46.240 --> 00:10:48.929
So this one over here has--

00:10:48.929 --> 00:10:52.249
I think there might be 50 from
the Google Developers channel.

00:10:52.249 --> 00:10:56.009
So the first thing that we're
going to look at is behavior

00:10:56.009 --> 00:11:00.300
pretty much by default, where
there's controls=1 or if you

00:11:00.300 --> 00:11:01.589
leave out controls.

00:11:01.589 --> 00:11:02.610
It's the default.

00:11:02.610 --> 00:11:08.529
And it can take some time for
these underlying Flash players

00:11:08.529 --> 00:11:12.879
to all initialize, and can add
some latency to the point

00:11:12.879 --> 00:11:15.509
where things look like
they're ready to be

00:11:15.509 --> 00:11:17.300
interacted with on the page.

00:11:17.300 --> 00:11:20.550
So not necessarily the
best user experience.

00:11:20.550 --> 00:11:22.629
If you take the same thing and
you change it to controls

00:11:22.629 --> 00:11:26.309
equals 2 explicitly, then you
should see a much better

00:11:26.309 --> 00:11:27.550
performance.

00:11:27.550 --> 00:11:30.759
It's quite remarkable,
actually.

00:11:30.759 --> 00:11:31.759
So what's going on?

00:11:31.759 --> 00:11:33.680
[? You can see ?] now again,
it's just loading in these

00:11:33.680 --> 00:11:34.680
thumbnails.

00:11:34.680 --> 00:11:38.189
It's not initializing the Flash
player for each video.

00:11:38.189 --> 00:11:40.899
And you could have--

00:11:40.899 --> 00:11:42.869
I don't want to say you should
put thousands of embeds on the

00:11:42.869 --> 00:11:45.689
same page-- but if you do happen
to have a large number

00:11:45.689 --> 00:11:49.519
of embeds on the page, you
will see a difference.

00:11:49.519 --> 00:11:50.910
So very important to
keep that in mind.

00:11:50.910 --> 00:11:53.720
A few other parameters
that are not

00:11:53.720 --> 00:11:55.920
necessarily as exciting.

00:11:55.920 --> 00:12:00.860
There's keyboard support for
the ActionScript player.

00:12:00.860 --> 00:12:03.119
I'm not really sure why you
would want to turn this off.

00:12:03.119 --> 00:12:05.230
I think it's actually kind of
nice to keep it on, but we do

00:12:05.230 --> 00:12:09.369
have the option of turning
it off if you want.

00:12:09.369 --> 00:12:13.170
This particular parameter
is quite important, the

00:12:13.170 --> 00:12:14.459
enablejsapi.

00:12:14.459 --> 00:12:18.389
And what it'll let you do is
ensure that you are able to

00:12:18.389 --> 00:12:21.249
talk to the iframe player
on the page using

00:12:21.249 --> 00:12:22.300
the JavaScript API.

00:12:22.300 --> 00:12:25.709
So as I mentioned, we're not
actually going to be covering

00:12:25.709 --> 00:12:28.529
anything about the JavaScript
API in this particular

00:12:28.529 --> 00:12:31.709
session, but plenty of
people have used it.

00:12:31.709 --> 00:12:34.180
And the one case where you
really need to be sure you're

00:12:34.180 --> 00:12:37.339
explicitly setting this is when
you're writing the iframe

00:12:37.339 --> 00:12:41.860
tag directly to the page.

00:12:41.860 --> 00:12:45.369
So kind of like this.

00:12:45.369 --> 00:12:46.709
Because when you're
using the YT.

00:12:46.709 --> 00:12:50.269
Player constructor, it pretty
much will be set automatically

00:12:50.269 --> 00:12:52.939
for you by default.

00:12:52.939 --> 00:12:54.579
Just because by virtue of the
fact that you're using

00:12:54.579 --> 00:12:57.000
JavaScript to initialize the
player, chances are you are

00:12:57.000 --> 00:12:59.240
going to want to talk to the
player with JavaScript.

00:12:59.240 --> 00:13:00.360
So it always gets set for you.

00:13:00.360 --> 00:13:03.040
But that's not the case if you
explicitly are writing an

00:13:03.040 --> 00:13:04.769
iframe tag to a page.

00:13:04.769 --> 00:13:06.900
So you really do need to make
sure there that you have

00:13:06.900 --> 00:13:10.589
enabled jsapi set to 1.

00:13:10.589 --> 00:13:17.440
And that's necessary in order to
talk to the iframe player.

00:13:17.440 --> 00:13:20.119
The end tag, and a little
bit further down

00:13:20.119 --> 00:13:22.100
the alphabet is start.

00:13:22.100 --> 00:13:24.459
So these are two corresponding
tags.

00:13:24.459 --> 00:13:27.029
This gives you a really easy way
of putting an embed on a

00:13:27.029 --> 00:13:31.269
page that has its custom end
time and a custom start time.

00:13:31.269 --> 00:13:35.779
So if you have a three-minute
video and you really want to

00:13:35.779 --> 00:13:37.660
embed 30 seconds in the middle
of the video, you could use

00:13:37.660 --> 00:13:38.819
those two tags to do it.

00:13:38.819 --> 00:13:43.179
As soon as playback reaches
the end tag, playback will

00:13:43.179 --> 00:13:44.819
effectively stop.

00:13:44.819 --> 00:13:47.149
So that could be useful.

00:13:47.149 --> 00:13:49.089
fs parameter--

00:13:49.089 --> 00:13:50.519
not super useful anymore.

00:13:50.519 --> 00:13:54.350
Basically, it lets you control
whether there is a full-screen

00:13:54.350 --> 00:13:56.930
button on the ActionScript
3.0 player.

00:13:56.930 --> 00:14:00.019
But I don't think it has an
effect on the HTML5 player.

00:14:00.019 --> 00:14:04.619
So not really sure why you would
want to change that.

00:14:04.619 --> 00:14:07.989
iv_load_policy is something that
controls whether, I guess

00:14:07.989 --> 00:14:11.389
interactive video
annotations--

00:14:11.389 --> 00:14:14.129
for lack of a better way of
describing it-- is shown on

00:14:14.129 --> 00:14:16.629
your video by default.

00:14:16.629 --> 00:14:18.379
So there's a couple of different
values over here.

00:14:18.379 --> 00:14:20.069
You use 1 or 3.

00:14:20.069 --> 00:14:22.480
Basically, setting at 1 will
make sure that those

00:14:22.480 --> 00:14:23.829
annotations are shown.

00:14:23.829 --> 00:14:24.959
Setting it to 3 will make
sure that they're

00:14:24.959 --> 00:14:26.350
not shown by default.

00:14:26.350 --> 00:14:29.799
But at any point, the user can
change the setting explicitly

00:14:29.799 --> 00:14:34.700
in the player, if they want to
show or hide the annotations.

00:14:34.700 --> 00:14:36.089
List is a really interesting
one.

00:14:36.089 --> 00:14:39.000
And there is quite a bit to
talk about with list.

00:14:39.000 --> 00:14:42.790
So I'm actually going to defer
at this point to a whole blog

00:14:42.790 --> 00:14:46.660
post that we put together to
talk about the different types

00:14:46.660 --> 00:14:51.120
of values that the list
parameter and the listType

00:14:51.120 --> 00:14:53.019
parameter, which is
an associated

00:14:53.019 --> 00:14:54.019
parameter, can take.

00:14:54.019 --> 00:14:56.769
I'll link to this blog post in
the video annotations, so you

00:14:56.769 --> 00:14:58.100
can read it in more detail.

00:14:58.100 --> 00:15:01.329
But the long and short of it is
that it's a really easy way

00:15:01.329 --> 00:15:05.689
to take a simple embedded player
on your page and use

00:15:05.689 --> 00:15:09.019
that to display a list of videos
without having to hard

00:15:09.019 --> 00:15:11.700
code the video IDs in advance.

00:15:11.700 --> 00:15:14.769
So you could have one specific
player on your page and say,

00:15:14.769 --> 00:15:17.800
play back the most recent videos
from a specific YouTube

00:15:17.800 --> 00:15:23.459
channel or specific playlist or
specific search term, even.

00:15:23.459 --> 00:15:26.799
So you could say, this is an
embedded player that will show

00:15:26.799 --> 00:15:29.019
the latest videos that
match the search

00:15:29.019 --> 00:15:30.779
from the YouTube API.

00:15:30.779 --> 00:15:32.829
Something along those lines.

00:15:32.829 --> 00:15:33.939
It's quite useful.

00:15:33.939 --> 00:15:36.579
I don't think as many people
know about it as they should.

00:15:36.579 --> 00:15:38.999
So hopefully people will watch
this and start using it a

00:15:38.999 --> 00:15:40.499
little bit more.

00:15:40.499 --> 00:15:43.410
listType goes hand in hand
with the list parameter.

00:15:43.410 --> 00:15:45.839
There is a loop parameter.

00:15:45.839 --> 00:15:49.089
And the loop parameter will--

00:15:49.089 --> 00:15:51.600
as explained in the
documentation--

00:15:51.600 --> 00:15:55.549
allow you to automatically
restart playback of a video

00:15:55.549 --> 00:15:57.610
when the playback has ended.

00:15:57.610 --> 00:16:00.111
You have to have a little bit of
a hack, if you're trying to

00:16:00.111 --> 00:16:02.100
do this for a single video,
where you create a playlist

00:16:02.100 --> 00:16:04.390
that has only one video
entry in it.

00:16:04.390 --> 00:16:06.779
So we have a little bit
more info there.

00:16:06.779 --> 00:16:09.910
modestbranding is something
that's covered in a different

00:16:09.910 --> 00:16:12.410
blog post, which we will also
link to from the annotation.

00:16:12.410 --> 00:16:17.769
And it talks about the option
down here at the bottom.

00:16:17.769 --> 00:16:20.529
It's not exactly a fully
logoless player.

00:16:20.529 --> 00:16:25.089
There still is a YouTube logo
involved that shows, I think,

00:16:25.089 --> 00:16:27.869
on the pause screen in the upper
right-hand corner, or in

00:16:27.869 --> 00:16:29.579
the queued screen.

00:16:29.579 --> 00:16:33.749
But it is one parameter that you
could set to tone down the

00:16:33.749 --> 00:16:36.699
YouTube branding
on the player.

00:16:36.699 --> 00:16:40.870
And that's something that you
might want to keep in mind if

00:16:40.870 --> 00:16:43.819
you have a scenario where you
want to embed, but don't want

00:16:43.819 --> 00:16:47.350
to make it fully YouTubed.

00:16:47.350 --> 00:16:51.559
The origin parameter is
something that can be used

00:16:51.559 --> 00:16:55.410
when you are using the iframe
embed tag, and you're going to

00:16:55.410 --> 00:17:00.299
be interacting with the iframe
embed using JavaScript.

00:17:00.299 --> 00:17:02.509
So as mentioned before, you
might want to explicitly put

00:17:02.509 --> 00:17:03.819
in enablejsapi.

00:17:03.819 --> 00:17:06.770
You also might want to
put in the origin

00:17:06.770 --> 00:17:08.370
parameter over here.

00:17:08.370 --> 00:17:12.900
And you set it equal to the full
URL for your web page.

00:17:12.900 --> 00:17:17.319
And this is a security mechanism
to make sure that

00:17:17.319 --> 00:17:20.069
only JavaScript that's run from
your host web page is

00:17:20.069 --> 00:17:23.169
able to talk to the player.

00:17:23.169 --> 00:17:24.959
And if you're using the YT.

00:17:24.959 --> 00:17:27.270
Player constructor, it gets
set automatically for you.

00:17:27.270 --> 00:17:29.549
So this is another instance
where you really only have to

00:17:29.549 --> 00:17:32.399
worry about this when you're
explicitly writing out an

00:17:32.399 --> 00:17:34.890
iframe tag.

00:17:34.890 --> 00:17:38.220
And sometimes people run into
issues where they explicitly

00:17:38.220 --> 00:17:41.240
were using the iframe tag, and
they're trying to talk to it

00:17:41.240 --> 00:17:45.220
using JavaScript, but their
code just isn't working.

00:17:45.220 --> 00:17:47.669
One thing to debug in that case
is check to see whether

00:17:47.669 --> 00:17:49.510
you are setting the
origin parameter.

00:17:49.510 --> 00:17:53.820
And if you are, make sure that
it's really set to the full

00:17:53.820 --> 00:17:57.720
URL of the host name
for your site.

00:17:57.720 --> 00:17:59.690
playerapiid--

00:17:59.690 --> 00:18:01.770
this isn't really relevant
anymore.

00:18:01.770 --> 00:18:04.889
It's more of a way of using the
older JavaScript API for

00:18:04.889 --> 00:18:06.610
identifying your player.

00:18:06.610 --> 00:18:10.419
There's a playlist parameter
which is easily confused with

00:18:10.419 --> 00:18:11.419
the list parameter.

00:18:11.419 --> 00:18:13.889
And it is something that
actually takes in a different

00:18:13.889 --> 00:18:14.889
set of values.

00:18:14.889 --> 00:18:18.740
The playlist parameter takes
in a list of video IDs.

00:18:18.740 --> 00:18:20.509
So this does not have to
be a real playlist, a

00:18:20.509 --> 00:18:21.820
[? list that ?] exists
on YouTube.

00:18:21.820 --> 00:18:26.320
It doesn't have to be anything
that uploads

00:18:26.320 --> 00:18:27.809
from a specific channel.

00:18:27.809 --> 00:18:30.690
It could just be a list of any
video IDs that you want.

00:18:30.690 --> 00:18:35.590
And it's a way of generating a
dynamic, on-the-fly playlist.

00:18:35.590 --> 00:18:39.090
So some use cases where
that might be useful.

00:18:39.090 --> 00:18:41.769
There's the rel parameter.

00:18:41.769 --> 00:18:45.769
And this controls whether or not
the end screen of a video

00:18:45.769 --> 00:18:49.200
will display related
videos or not.

00:18:49.200 --> 00:18:51.290
Most folks are familiar with the
fact that once you reach

00:18:51.290 --> 00:18:55.620
the end of a YouTube video,
you'll see some configuration

00:18:55.620 --> 00:18:59.049
of thumbnails with suggestions
for other videos to play.

00:18:59.049 --> 00:19:01.850
We do have the ability to turn
that off if you feel like you

00:19:01.850 --> 00:19:06.179
do not want that
on your embeds.

00:19:06.179 --> 00:19:12.669
showinfo is something that will
control what is displayed

00:19:12.669 --> 00:19:15.269
initially in the
queued states.

00:19:15.269 --> 00:19:18.140
There's ways of taking the
default behavior and kind of

00:19:18.140 --> 00:19:20.110
toning it down a bit, again,
where you don't see quite as

00:19:20.110 --> 00:19:23.380
much before the video starts.

00:19:23.380 --> 00:19:25.140
And you can set it to
show info equal

00:19:25.140 --> 00:19:27.130
0, if you want that.

00:19:27.130 --> 00:19:29.360
showinfo's actually used
in another case.

00:19:29.360 --> 00:19:31.970
And that's when you're using
the list player.

00:19:31.970 --> 00:19:36.639
And explicitly setting showinfo
equal to 1 will make

00:19:36.639 --> 00:19:41.250
it so that there is a list of
queued videos in the playlist

00:19:41.250 --> 00:19:42.570
in your list player.

00:19:42.570 --> 00:19:44.179
So if we look over here,
this is a case where

00:19:44.179 --> 00:19:47.330
showinfo is set to 1.

00:19:47.330 --> 00:19:49.240
This is a playlist player that's
loading everything from

00:19:49.240 --> 00:19:50.740
Google Developers.

00:19:50.740 --> 00:19:52.929
And you'll see, before playback
has even started, you

00:19:52.929 --> 00:19:56.399
have this handy thumbnail for
all the videos that are queued

00:19:56.399 --> 00:19:58.269
up in the playlist for
the next videos.

00:19:58.269 --> 00:20:00.970
It will let you choose what
you want to start with.

00:20:00.970 --> 00:20:04.460
So it is actually quite useful
for scenarios where you're

00:20:04.460 --> 00:20:08.659
doing the list player.

00:20:08.659 --> 00:20:12.570
Start parameter we really
covered before, hand in hand

00:20:12.570 --> 00:20:14.460
with the end parameter.

00:20:14.460 --> 00:20:17.360
And the last one is the
theme parameter.

00:20:17.360 --> 00:20:19.309
This is something similar to
that earlier color parameter

00:20:19.309 --> 00:20:23.210
that just lets you change the
default way that the player

00:20:23.210 --> 00:20:26.610
looks and gives you some degree
of customization in

00:20:26.610 --> 00:20:29.269
that regard.

00:20:29.269 --> 00:20:32.039
There are now a couple of
deprecated parameters.

00:20:32.039 --> 00:20:33.300
I'm not going to cover those.

00:20:33.300 --> 00:20:34.659
They're deprecated
for a reason.

00:20:34.659 --> 00:20:36.420
We don't want folks using
them anymore.

00:20:36.420 --> 00:20:40.490
I wanted to point out that
there are occasionally--

00:20:40.490 --> 00:20:44.309
I don't want to say rumors--
but certain parameters out

00:20:44.309 --> 00:20:46.970
there that people pass around
and say, hey, you can use this

00:20:46.970 --> 00:20:51.139
player parameter to force HTML5
playback, or use this

00:20:51.139 --> 00:20:53.759
player parameter to force
playback in a certain quality

00:20:53.759 --> 00:20:56.309
level or something along
those lines.

00:20:56.309 --> 00:20:58.399
Those are undocumented
for a reason.

00:20:58.399 --> 00:21:01.980
We really do not want people to
use parameters that aren't

00:21:01.980 --> 00:21:04.320
explicitly mentioned in the
documentation, partly because

00:21:04.320 --> 00:21:06.529
we're not fully committed
to supporting them.

00:21:06.529 --> 00:21:10.500
They might sometimes work in
some cases, and they might

00:21:10.500 --> 00:21:12.309
stop working at any time
in the future.

00:21:12.309 --> 00:21:15.090
So we really don't want people
to build things that rely on

00:21:15.090 --> 00:21:17.190
those parameters.

00:21:17.190 --> 00:21:22.070
And there's also just cases
where we want control to be in

00:21:22.070 --> 00:21:25.440
the hands of the person who's
viewing the embed.

00:21:25.440 --> 00:21:30.700
So we want control over the
default playback to really lie

00:21:30.700 --> 00:21:33.840
in the person who's using the
web browser and might have

00:21:33.840 --> 00:21:35.870
Flash enabled.

00:21:35.870 --> 00:21:41.169
Or the default auto quality for
the quality level in many

00:21:41.169 --> 00:21:44.169
cases gives the best playback
experience.

00:21:44.169 --> 00:21:47.760
So if you don't see something
listed as a supported

00:21:47.760 --> 00:21:49.150
parameter, please
don't use it.

00:21:49.150 --> 00:21:52.649
And if you do happen to find
some parameters, please don't

00:21:52.649 --> 00:21:55.950
complain if they ever break at
some point in the future.

00:21:55.950 --> 00:21:59.010
I guess that's the
main takeaway.

00:21:59.010 --> 00:22:01.450
That covers the list of all
the supported parameters.

00:22:01.450 --> 00:22:04.169
We had a lot of different
web material here.

00:22:04.169 --> 00:22:06.120
And be sure to check out the
annotations on the video for

00:22:06.120 --> 00:22:09.250
links to everything that
we covered today.

00:22:09.250 --> 00:22:13.049
Thanks very much for watching.

00:22:13.049 --> 00:22:17.309
And we'll see everybody
next week.

00:22:17.309 --> 00:22:20.639
Cheers.

